---
title: "Peter"
format: docx
editor: visual
---

## Quarto

xxxzaa

## Trip Volume

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:'

test

5:48 pm

```{r}

con <- DBI::dbConnect(odbc::odbc(),
                      ## Driver = "SQL Server",
                      ##Driver = "{SQL Server Native Client 11.0}",
                      Driver = "{ODBC Driver 17 for SQL Server}", # this driver works better; it needs to be installed
                      Server = "TRSQLAG-PTDWP.th.gov.bc.ca",
                      Database = "PTDW_PRD",
                      Trusted_Connection = "yes")


```

You can add options to executable code like this

```{sql, connection=con}
 
select 
*
from 

	[PTDW_PRD].[dbo].[PTDW_ORGANIZATION] c

```

```{r}


load("W:\\PTBoard\\Initiatives\\Data Modelling & Policy Initiative\\Data Economic Modelling Projects\\2023_011_Indicators\\src\\trip_volume\\3_trip_volume_cube.Rda")


library(tidyverse)
trip_vol_reduced<-trip_vol%>%
group_by(
  yr, 
  mth, 
  GEOSPATIAL_AREA_TYPE_CODE,
  TRIP_SERVICE_TYPE_CODE, 
  PICKUP_AREA,  
  PTS_ORGANIZATION_NAME
  )%>%
  summarize(
  vol=sum(volume),
  rev=sum(rev_per_vehcile)
  ) 


library(dplyr)
library(tidyr)
library(stringr)

# 1) (Optional) keep only the region you want
# df_long <- df_long %>%
#   filter(GEOSPATIAL_AREA_TYPE_CODE == "REGIONAL",
#          PICKUP_AREA == "Metro Vancouver Regional District")

# 2) Ensure months are labeled Janâ€¦Dec and present even if missing
month_labs <- c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec")

df_pivot <- trip_vol_reduced %>%
  mutate(
    mth = factor(mth, levels = 1:12, labels = month_labs),
    yr  = as.integer(yr)
  ) %>%
  group_by(TRIP_SERVICE_TYPE_CODE, yr, mth) %>%     # sum to year-month-service
  summarise(vol = sum(vol, na.rm = TRUE), .groups = "drop") %>%
  complete(TRIP_SERVICE_TYPE_CODE, yr, mth, fill = list(vol = 0)) %>% # fill missing months
  arrange(TRIP_SERVICE_TYPE_CODE, yr, mth) %>%
  pivot_wider(
    names_from = mth,
    values_from = vol
  ) %>%
  arrange(TRIP_SERVICE_TYPE_CODE, yr)

df_pivot


```


```{r}
library(kableExtra)

mtcars[1:10, 1:6]

kbl(mtcars[1:10, 1:6], caption = "Group Rows") %>%
  kable_paper("striped", full_width = F) %>%
  pack_rows("Group 1", 4, 7) %>%
  pack_rows("Group 2", 8, 10)


trip_vol_reduced

```



